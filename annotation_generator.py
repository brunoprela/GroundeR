import matlab.engine;
import numpy as np;

#It is a list of length N. N represents the number of queries. The i-th element of this list is also a list, 
#recording the i-th query's positive proposals' IDs among the 100 proposals generated by Selective Search or Edge Box.
#The positive proposals are defined as the proposals with an Intersection of Union (IoU) larger than 0.5 for the 
#corresponding ground truth bounding box of the i-th query.
def get_gt_pos_all():
	return;


#It is an N dimensional vector. The i-th element represent the proposal ID which covers most with ground truth bounding 
#box for the i-th query. If the most covered proposal's IoU is less than 0.5, we replace the proposal ID as -1.
def get_pos_id():
	return


#It is a list of length N. The i-th element of this list is also a list, which represents the word ID sequence of the i-th query.
def get_sens():
	return;

#It is an N x 4 matrix. The i-th row represents the ground truth bounding box annotation for the i-th query. 
#The annotation is in the form of [xmin, ymin, xmax, ymax].
def get_gt_box(ann, dict):
	return;




def get_Iou(b1, b2):
	xmin = np.max(b1[0], b2[0]);
	ymin = np.max(b1[1], b2[1]);
	xmax = np.min(b1[2], b2[2]);
	ymax = np.min(b1[3], b2[3]);

	intersection = get_area(xmax - xmin, ymax - ymin);
	union = get_area(b1[2] - b1[0], b1[3] - b1[1]) + get_area(b2[2] - b2[0], b2[3] - b2[1]) - intersection;
	return intersection / union;

def get_area(w, h):
	return w * h;

if __name__ == '__main__':
	eng = matlab.engine.start_matlab();
	fn = './Flickr30kEntities/Annotations/6609688031.xml' 
	#print type(eng.getAnnotations())
	annotation = eng.getAnnotations(fn);
	print annotation;


